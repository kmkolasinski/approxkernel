! SUBROUTINE initvslsconv2d(this, kernel, input_shape, mode)
!    type(VSL_TYPE), TARGET :: this
!    DTYPE, DIMENSION(:, :), intent(in) :: kernel
!    INTEGER, DIMENSION(2) :: input_shape
!    INTEGER, OPTIONAL :: mode

  INTEGER, DIMENSION(2) :: kernel_shape
  TYPE(VSLConv2DParams), POINTER :: params
  INTEGER :: info

  CALL deletevslconv2d(this)
  params => this%params
  kernel_shape = SHAPE(kernel)
  !print*,"[INFO] Initializing Conv2D with kernel: ", kernel_shape
  call init_conv2d(params, kernel_shape, input_shape, mode)

  ALLOCATE(this%kernel(kernel_shape(1), kernel_shape(2)))
  this%kernel = kernel

  info = vslconvnewtaskx2d(params%task, params%mode, &
    params%kernel_shape, params%xshape, params%yshape, &
    this%kernel, params%kernel_stride)

  ALLOCATE(this%output(params%yshape(1), params%yshape(2)))

! END SUBROUTINE initvslsconv2d
