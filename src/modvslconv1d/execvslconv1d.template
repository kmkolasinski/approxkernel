! SUBROUTINE execvslsconv1d(this, input, output)
! type(VSLSConv1D), TARGET :: this
! REAL(KIND=4), DIMENSION(:) :: input, output
  TYPE(VSLConv1DParams), POINTER :: params
  INTEGER :: info, padding

  params => this%params
  padding = params%padding + 1

  IF (ANY(SHAPE(input) /= SHAPE(output))) THEN
    PRINT"(A, 2i6, A, 2i6, A)","[ERROR] execvslconv1d: Input (",SHAPE(input),&
           ") and output (",SHAPE(output),") arrays must have the same shape."
    STOP -1
  END IF

  IF (ANY(SHAPE(input) /= params%xshape)) THEN
    PRINT"(A, 2i6, A, 2i6, A, A, 2i, A)","[ERROR] execvslconv1d: Input (",SHAPE(input),&
           ") and output (",SHAPE(output),") arrays must have the same ", &
           "shape as VSLCONV1D expected input shape (", params%xshape,")"
    STOP -1
  END IF

  info = vslconvexecx1d(params%task, input, params%xstride, this%output, params%ystride)
  output = this%output(padding: params%xshape(1) + padding)

! END SUBROUTINE
